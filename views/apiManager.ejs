<%- include('../partials/navbar') %>
    <title>MeowStresser - Api</title>
    <link rel="stylesheet" href="/css/api-manager.css">
    <div class="container mx-auto p-4 text-[#ccd2e3]" id="content" style="max-width: 80rem">
        <div id="flash-message-container" class="hidden p-4 mb-4 rounded text-white fixed top-4 right-4 z-50"></div>
        <div class="bg-[#1f2233] p-6 rounded-lg shadow-lg mb-8">
            <h3 class="text-2xl font-bold mb-4">API Manager</h3><br>
            <% if (user.apiToken) { %>
            <h3 class="text-xl font-bold mb-4">Start Attack</h3>
            <div class="flex items-center justify-between">
                <input id="general-api-link" class="w-full bg-[#151829] text-[#A6B0CF] px-4 py-2 rounded-md" readonly value="https://meowstresser.com/start?key=<%= user.apiToken %>&host=[host]&port=[port]&time=[time]&method=[method]">
            </div>
            <br>
            <br>
            <h3 class="text-xl font-bold mb-4">Stop Attack</h3>
            <div class="flex items-center justify-between">
                <input id="stop-attack-link" class="w-full bg-[#151829] text-[#A6B0CF] px-4 py-2 rounded-md" readonly value="https://meowstresser.com/stop?key=<%= user.apiToken %>&attackID=[attackid]">
            </div>
            <br>
            <% } else { %>
                <input id="general-api-link" class="w-full bg-[#151829] text-[#A6B0CF] px-4 py-2 rounded-md" readonly value="You don't have an API Token">
                <br><br>
            <% } %>
            <div class="flex flex-col space-y-4 md:flex-row md:space-x-4 md:space-y-0">
                <% if (!user.apiToken) { %>
                    <button id="generate-token-btn" class="bg-[#4458b8] text-white px-4 py-2 rounded-md transition-colors duration-300 hover:bg-[#2a3773]">Generate New API Token</button>
                <% } %>
                <% if (user.apiToken) { %>
                    <button id="disable-token-btn" class="bg-red-600 text-white px-4 py-2 rounded-md transition-colors duration-300 hover:bg-red-700">Disable API Token</button>
                <% } %>
            </div>
        </div>
        <div class="bg-[#1f2233] p-6 rounded-lg shadow-lg mb-8">
            <h3 class="text-xl font-bold mb-4">Fields</h3>
            <div class="overflow-x-auto">
                <table class="min-w-full text-left border-collapse">
                    <thead>
                        <tr>
                            <th class="p-2 text-sm font-semibold border-b border-[#7482b3]">PARAMETER</th>
                            <th class="p-2 text-sm font-semibold border-b border-[#7482b3]">TYPE</th>
                            <th class="p-2 text-sm font-semibold border-b border-[#7482b3]">DESCRIPTION</th>
                            <th class="p-2 text-sm font-semibold border-b border-[#7482b3]">VALUE</th>
                            <th class="p-2 text-sm font-semibold border-b border-[#7482b3]">REQUIRED</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% fields.forEach(field => { %>
                            <tr>
                                <td class="p-2 text-sm text-[#A6B0CF]">
                                    <%= field.parameter %>
                                </td>
                                <td class="p-2 text-sm text-[#A6B0CF]">
                                    <%= field.type %>
                                </td>
                                <td class="p-2 text-sm text-[#A6B0CF]">
                                    <%= field.description %>
                                </td>
                                <td class="p-2 text-sm text-[#A6B0CF]">
                                    <%= field.value %>
                                </td>
                                <td class="p-2 text-sm text-[#A6B0CF]">
                                    <span class="<%= field.required ? 'text-[#43a100]' : 'text-red-500' %>">
                                  <%= field.required ? '✓' : '✗' %>
                                </span>
                                </td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>
            </div>
        </div>
        <div class="bg-[#1f2233] p-6 rounded-lg shadow-lg">
            <h3 class="text-xl font-bold mb-4">Available Methods</h3>
            <div class="overflow-x-auto">
                <table class="min-w-full text-left border-collapse">
                    <thead>
                        <tr>
                            <th class="p-2 text-sm font-semibold border-b border-[#7482b3] w-1/3">METHOD</th>
                            <th class="p-2 text-sm font-semibold border-b border-[#7482b3] w-1/3">LAYER</th>
                            <th class="p-2 text-sm font-semibold border-b border-[#7482b3] w-1/3">TYPE</th>
                        </tr>
                    </thead>
                    <tbody id="methods-table-body">
                        <% methods.forEach(method => { %>
                            <tr>
                                <td class="p-2 text-sm text-[#A6B0CF]">
                                    <%= method.method %>
                                </td>
                                <td class="p-2 text-sm text-[#A6B0CF]">
                                    <%= method.protocol %>
                                </td>
                                <td class="p-2 text-sm text-[#A6B0CF]">
                                    <%= method.type %>
                                </td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>
            </div>
            <div class="flex justify-center mt-4">
                <ul class="flex space-x-2" id="pagination-buttons">
                    <% for(let i=1; i <=totalPages; i++) { %>
                        <li>
                            <button data-page="<%= i %>" class="pagination-btn px-3 py-2 rounded-md transition-colors duration-300 text-[#A6B0CF] hover:text-white <%= (page === i) ? 'bg-[#4458b8]-600 text-[#A6B0CF]' : ' text-[#A6B0CF] hover:bg-[#4458b8]-400 hover:text-white' %>"><%= i %></button>
                        </li>
                    <% } %>
                </ul>
            </div>
        </div>
    </div>
    <%- include('../partials/footer') %>
    <script>
        const generateTokenBtn = document.getElementById('generate-token-btn');
        const disableTokenBtn = document.getElementById('disable-token-btn');
        const flashMessageContainer = document.getElementById('flash-message-container');
        const menuBtn = document.getElementById('menu-btn');
        const mobileMenu = document.getElementById('mobile-menu');
        const content = document.getElementById('content');
        menuBtn.addEventListener('click', () => {
            mobileMenu.classList.toggle('hidden');
            mobileMenu.classList.toggle('slide-in-active');
            content.classList.toggle('blurred');
            document.body.classList.toggle('no-scroll');
        });
        function showFlashMessage(message, type = 'success', reload = false) {
            flashMessageContainer.innerText = message;
            if (type === 'success') {
                flashMessageContainer.style.backgroundColor = '#22c55e';
            } else if (type === 'error') {
                flashMessageContainer.style.backgroundColor = '#ef4444';
            }
            flashMessageContainer.classList.remove('hidden');
            setTimeout(() => {
                flashMessageContainer.classList.add('hidden');
                if (reload) {
                    window.location.reload();
                }
            }, 1000);
        }
        if (generateTokenBtn) {
            generateTokenBtn.addEventListener('click', async() => {
                const response = await fetch('/generate-api-key', {
                    method: 'POST'
                });
                const result = await response.json();
                if (result.apiToken) {
                    showFlashMessage('New API token generated successfully.', 'success', true);
                } else {
                    showFlashMessage('Failed to generate API token.', 'error');
                }
            });
        }
        if (disableTokenBtn) {
            disableTokenBtn.addEventListener('click', async() => {
                const response = await fetch('/disable-api-key', {
                    method: 'POST'
                });
                const result = await response.json();
                if (result.message === 'API key disabled successfully.') {
                    showFlashMessage('API key disabled successfully.', 'success', true);
                } else {
                    showFlashMessage('Failed to disable API key.', 'error');
                }
            });
        }
        async function loadMethods(page) {
            const response = await fetch(`/api/methods?page=${page}`);
            const methods = await response.json();
            const methodsTableBody = document.getElementById('methods-table-body');
            methodsTableBody.innerHTML = '';
            methods.forEach(method => {
                const row = `<tr>
                    <td class="p-2 text-sm">${method.method}</td>
                    <td class="p-2 text-sm">${method.protocol}</td>
                    <td class="p-2 text-sm">${method.type}</td>
                </tr>`;
                methodsTableBody.innerHTML += row;
            });
        }
        const paginationButtons = document.querySelectorAll('.pagination-btn');
        paginationButtons.forEach(button => {
            button.addEventListener('click', (e) => {
                const page = e.target.getAttribute('data-page');
                loadMethods(page);
                paginationButtons.forEach(btn => btn.classList.remove('bg-[#2a3773]', 'text-[#A6B0CF]'));
                e.target.classList.add('bg-[#2a3773]', 'text-[#A6B0CF]');
            });
        });
    </script>